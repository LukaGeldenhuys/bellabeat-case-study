activity = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/dailyActivity_merged.csv')
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
sleep = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/sleepDay_merged.csv')
weight = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/weightLogInfo_merged.csv')
activity$Id = as.character(activity$Id)
sleep$Id = as.character(sleep$Id)
weight$Id = as.character(weight$Id)
weight$LogId = as.character(weight$LogId)
heart_rate$Id = as.character(heart_rate$Id)
weight$IsManualReport = as.logical(weight$IsManualReport)
activity$ActivityDate = as.Date(activity$ActivityDate, "%m/%d/%Y")
sleep$SleepDay = as.Date(sleep$SleepDay, "%m/%d/%Y")
weight$Date = as.Date(weight$Date, "%m/%d/%Y")
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate_grouped = heart_rate %>% group_by(Hour, Date, Id)
heart_rate_grouped = heart_rate %>% group_by(Date, Id)
heart_rate_grouped = heart_rate %>% group_by(Hour)
heart_rate_grouped = heart_rate %>% group_by(Id, Date, Hour)
View(heart_rate_grouped)
View(heart_rate)
heart_rate_grouped = heart_rate %>% group_by(Hour)
heart_rate_grouped = heart_rate %>% group_by(Hour) %>% summarise(Value)
heart_rate_grouped = heart_rate %>% group_by(Hour) %>% reframe(Value)
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
#heart_rate$Average_per_hour =
heart_rate %>% group_by(Hour) %>% mean(Value)
#heart_rate$Average_per_hour =
heart_rate %>% mean(Value)
#heart_rate$Average_per_hour =
heart_rate %>% mean(Value)
#heart_rate$Average_per_hour =
print(heart_rate %>% mean(Value))
#heart_rate$Average_per_hour =
heart_rate %>% summarise(Value)
#heart_rate$Average_per_hour =
heart_rate %>% summarise()
#heart_rate$Average_per_hour =
heart_rate %>% summarise(heart_rate)
#heart_rate$Average_per_hour =
summarise(heart_rate)
#heart_rate$Average_per_hour =
summarize(heart_rate)
#heart_rate$Average_per_hour =
summary(heart_rate)
#heart_rate$Average_per_hour =
mean(heart_rate)
#heart_rate$Average_per_hour =
mean(heart_rate$Hour)
heart_rate$Average_per_hour = mean(heart_rate$Hour)
heart_rate$Average_per_hour = heart_rate %>% group_by(Id, Date) %>% mean(Hour)
heart_rate %>% group_by(Id, Date)
heart_rate %>% group_by(Value)
heart_rate %>% group_by(Value) %>% summary()
heart_rate %>% group_by(Id, Date) %>% summarise(mean(Hour))
heart_rate$Average_per_hour = heart_rate %>% group_by(Id, Date) %>% summarise(mean(Hour))
heart_rate %>% group_by(Id, Date) %>% summarise(mean(Hour))
heart_rate %>% group_by(Id, Date, Hour) %>% summarise(mean(Value))
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = mean(Value))
head(heart_rate)
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p"), format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
View(heart_rate)
rm(heart_rate_grouped)
head(heart_rate)
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
heart_rate$Time = as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p")
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = format(heart_rate$Time, format = "%H")
heart_rate$Hour = as.integer(format(heart_rate$Time, format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
View(heart_rate)
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Time = as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p")
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(heart_rate$Time, format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
d
print("s")
d
View(activity)
summary(activity$TotalSteps)
n_distinct(activity$Id)
n_distinct(activity$Id)
n_distinct(sleep$Id)
n_distinct(weight$Id)
n_distinct(heart_rate$Id)
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
n_distinct(heart_rate$Id)
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Time = as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p")
heart_rate$Id = as.character(heart_rate$Id)
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(heart_rate$Time, format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
summarise(activity$TotalSteps)
summary(activity$TotalSteps)
summary(activity$TotalSteps, activity$Id)
activity %>% summarise(mean(TotalSteps))
summary(activity)
summary(activity$TotalSteps)
summary(activity$TotalSteps)
summary(activity$Calories)
summary(activity$TotalSteps)
summary(activity$Calories)
summary(activity$TotalSteps)
summary(activity$Calories)
summary.table(activity)
summary.table(as.table(activity))
library(vtable)
install.packages("vtable")
library(vtable)
sumtable(activity)
sumtable(activity, vars = c("TotalSteps"))
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "ModeratelyActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"))
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "ModeratelyActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "viewer")
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "ModeratelyActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"))
sumtable(heart_rate, vars = c("Average value"))
sumtable(heart_rate, vars = c("Average_value"))
sumtable(heart_rate, vars = c("Average_value"), group = "Hour")
sumtable(heart_rate, vars = c("Average_value"), group = "Hour", out = "return")
sumtable(heart_rate, vars = c("Average_value"), group.long = "Hour", out = "return")
sumtable(heart_rate, vars = c("Average_value"), group = "Hour", group.long = TRUE, out = "return")
sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"))
sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"), out = "return")
991/60
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vtable)
rm(list=ls())
activity = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/dailyActivity_merged.csv')
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
sleep = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/sleepDay_merged.csv')
weight = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/weightLogInfo_merged.csv')
head(activity, n = 4L)
head(sleep, n = 4L)
head(weight, n = 4L)
head(heart_rate, n = 4L)
activity$Id = as.character(activity$Id)
sleep$Id = as.character(sleep$Id)
weight$Id = as.character(weight$Id)
weight$LogId = as.character(weight$LogId)
heart_rate$Id = as.character(heart_rate$Id)
weight$IsManualReport = as.logical(weight$IsManualReport)
activity$Date = as.Date(activity$ActivityDate, "%m/%d/%Y")
activity = activity[, !names(activity) %in% "ActivityDate"]
sleep$Date = as.Date(sleep$SleepDay, "%m/%d/%Y")
sleep = sleep[, !names(sleep) %in% "SleepDay"]
weight$Date = as.Date(weight$Date, "%m/%d/%Y")
heart_rate$Time = as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p")
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(heart_rate$Time, format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
n_distinct(activity$Id)
n_distinct(sleep$Id)
n_distinct(weight$Id)
n_distinct(heart_rate$Id)
activity_sleep = merge(activity, sleep, by = c("Id", "Date"))
# sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
# sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"), out = "return")
# sumtable(heart_rate, vars = c("Average_value"), group = "Hour", group.long = TRUE, out = "return")
ggplot(heart_rate) + geom_point(mapping = aes(x = Hour, y = Average_value))
ggplot(heart_rate) + geom_point(mapping = aes(x = Hour, y = Average_value)) + geom_smooth()
ggplot(heart_rate, mapping = aes(x = Hour, y = Average_value)) + geom_point() + geom_smooth()
ggplot(heart_rate, mapping = aes(x = Hour, y = Average_value)) +
geom_point() +
geom_smooth() +
scale_x_discrete(breaks = seq(0, 23, by = 2))
ggplot(heart_rate, mapping = aes(x = Hour, y = Average_value)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 23, by = 2))
ggplot(heart_rate, mapping = aes(x = Date, y = Average_value)) +
geom_point() +
geom_smooth()
View(activity)
ggplot(activity_sleep, mapping = aes(x = Date, y = TotalSteps)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = Date, y = TotalSteps)) +
geom_line() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = Date, y = TotalSteps)) +
geom_smooth()
ggplot(activity_sleep) +
geom_smooth(mapping = aes(x = Date, y = TotalSteps)) +
geom_smooth(mapping = aes(x = Date, y = TotalMinutesAsleep))
ggplot(activity_sleep, mapping = aes(x = TotalSteps, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = Calories, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalTimeInBed, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalMinutesAsleep, y = TotalSteps)) +
geom_point() +
geom_smooth()
600 / 60
8*60
ggplot(activity_sleep, mapping = aes(x = TotalMinutesAsleep, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalMinutesAsleep, y = SedentaryMinutes)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth()
activity_sleep %>%
select(TotalTimeInBed, SedentaryMinutes) %>%
summary()
activity_sleep %>%
select(TotalMinutes = SedentaryMinutes + LightlyActiveMinutes + FairlyActiveMinutes + VeryActiveMinutes) %>%
summary()
attach(activity_sleep)
activity_sleep$TotalMinutes = SedentaryMinutes + LightlyActiveMinutes + FairlyActiveMinutes + VeryActiveMinutes
activity_sleep %>%
select(TotalMinutes) %>%
summary()
1398*60
1398/60
972/60
# sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
# sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"), out = "return")
# sumtable(heart_rate, vars = c("Average_value"), group = "Hour", group.long = TRUE, out = "return")
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories)
# sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
# sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"), out = "return")
# sumtable(heart_rate, vars = c("Average_value"), group = "Hour", group.long = TRUE, out = "return")
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
summary()
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
if(TotalSteps == 0)
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
if(TotalSteps == 0)
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
filter(TotalSteps == 0)
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
filter(TotalSteps == 0)
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
filter(TotalSteps == 0) %>%
count()
activity %>%
filter(TotalSteps == 0) %>%
count()
# sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
# sumtable(sleep, vars = c("TotalSleepRecords", "TotalMinutesAsleep", "TotalTimeInBed"), out = "return")
# sumtable(heart_rate, vars = c("Average_value"), group = "Hour", group.long = TRUE, out = "return")
activity %>%
select(TotalSteps, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes, SedentaryMinutes, Calories) %>%
summary()
sleep %>%
summary()
sumtable(sleep, vars = c("TotalMinutesAsleep", "TotalTimeInBed", "TotalSleepRecords"))
sumtable(sleep, vars = c("TotalMinutesAsleep", "TotalTimeInBed", "TotalSleepRecords"), out = "return")
ggplot(heart_rate, mapping = aes(x = Hour, y = Average_value)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 23, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalMinutesAsleep, y = Calories)) +
geom_point() +
geom_smooth()
activity_sleep$TotalHoursAsleep = round(activity_sleep$TotalMinutesAsleep / 60, 2)
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = Calories)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, step = 1)))
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = Calories)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, step = 1))
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = Calories)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, by = 1))
count(activity_sleep$TotalHoursAsleep < 4)
count(activity_sleep, TotalHoursAsleep < 4)
count(activity_sleep, TotalHoursAsleep <= 4)
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = Calories)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, by = 1))
ggplot(activity_sleep, mapping = aes(x = TotalHoursAsleep, y = TotalSteps)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, by = 1))
ggplot(activity_sleep, mapping = aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 15, by = 1))
#scale_x_continuous(breaks = seq(0, 15, by = 1))
```
ggplot(activity_sleep, mapping = aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = VeryActiveMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = VeryActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(y = Calories)) +
geom_point(aes(x = VeryActiveMinutes)) +
geom_point(aes(x = FairlyActiveMinutes)) +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = c(VeryActiveMinutes, FairlyActiveMinutes), y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = FairlyActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = FALSE)
library(vtable)
rm(list=ls())
activity = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/dailyActivity_merged.csv')
heart_rate = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/heartrate_seconds_merged.csv')
sleep = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/sleepDay_merged.csv')
weight = read.csv('/Users/luka/Documents/Case Studies/bellabeat-case-study/Data/weightLogInfo_merged.csv')
head(activity, n = 4L)
head(sleep, n = 4L)
head(weight, n = 4L)
head(heart_rate, n = 4L)
activity$Id = as.character(activity$Id)
sleep$Id = as.character(sleep$Id)
weight$Id = as.character(weight$Id)
weight$LogId = as.character(weight$LogId)
heart_rate$Id = as.character(heart_rate$Id)
weight$IsManualReport = as.logical(weight$IsManualReport)
activity$Date = as.Date(activity$ActivityDate, "%m/%d/%Y")
activity = activity[, !names(activity) %in% "ActivityDate"]
sleep$Date = as.Date(sleep$SleepDay, "%m/%d/%Y")
sleep = sleep[, !names(sleep) %in% "SleepDay"]
weight$Date = as.Date(weight$Date, "%m/%d/%Y")
heart_rate$Time = as.POSIXct(heart_rate$Time, format = "%m/%d/%Y %I:%M:%S %p")
heart_rate$Date = as.Date(heart_rate$Time, "%m/%d/%Y")
heart_rate$Hour = as.integer(format(heart_rate$Time, format = "%H"))
heart_rate = heart_rate[, !names(heart_rate) %in% "Time"]
heart_rate = heart_rate %>% group_by(Id, Date, Hour) %>% summarise(Average_value = as.integer(round(mean(Value))))
head(heart_rate)
n_distinct(activity$Id)     # Activity
n_distinct(sleep$Id)        # Sleep
n_distinct(heart_rate$Id)   # Heart rate
n_distinct(weight$Id)       # Weight
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
activity %>%
filter(Calories < 1800) %>%
count()
activity = activity[activity$Calories >= 1800, ]
activity %>%
filter(TotalSteps == 0) %>%
count()
activity = activity[activity$TotalSteps != 0, ]
sumtable(activity, vars = c("TotalSteps", "VeryActiveMinutes", "FairlyActiveMinutes", "LightlyActiveMinutes", "SedentaryMinutes", "Calories"), out = "return")
sumtable(sleep, vars = c("TotalMinutesAsleep", "TotalTimeInBed", "TotalSleepRecords"), out = "return")
activity_sleep = merge(activity, sleep, by = c("Id", "Date"))
activity_sleep$TotalHoursAsleep = round(activity_sleep$TotalMinutesAsleep / 60, 2)
ggplot(activity_sleep, mapping = aes(x = FairlyActiveMinutes, y = Calories)) +
geom_point() +
geom_smooth()
#scale_x_continuous(breaks = seq(0, 15, by = 1))
ggplot(activity_sleep, mapping = aes(x = Calories, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalSteps, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = TotalSteps, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = Calories)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = VeryActiveMinutes)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth()
scale_y_continuous(breaks = seq(0, 15, by = 1))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth()
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 15, by = 1))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 20, by = 1))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 1))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 3))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 1))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_y_continuous(breaks = seq(0, 24, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalHoursAsleep)) +
geom_point() +
geom_smooth() +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
#  labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes, y = TotalMinutesAsleep)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
```
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2)) +
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth() +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2))
ggplot(activity_sleep, mapping = aes(x = SedentaryMinutes / 60, y = TotalMinutesAsleep / 60)) +
geom_point() +
geom_smooth(method = "loess", formula = "y ~ x") +
labs(x = "Sedentary Hours", y = "Hours asleep") +
scale_x_continuous(breaks = seq(0, 24, by = 2)) +
scale_y_continuous(breaks = seq(0, 24, by = 2))
